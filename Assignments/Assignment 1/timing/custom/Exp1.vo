// Copyright (C) 1991-2008 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II"
// VERSION "Version 8.1 Build 163 10/28/2008 SJ Web Edition"

// DATE "02/26/2022 22:38:30"

// 
// Device: Altera EPF10K30ETC144-1 Package TQFP144
// 

// 
// This Verilog file should be used for Custom Verilog HDL only
// 

`timescale 1 ps/ 1 ps

module Exp1 (
	A,
	B,
	S,
	Cin,
	add_sub);
input 	[3:0] A;
input 	[3:0] B;
output 	[4:0] S;
input 	Cin;
input 	add_sub;

wire gnd = 1'b0;
wire vcc = 1'b1;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("Exp1_v.sdo");
// synopsys translate_on

wire \A[0]~dataout ;
wire \B[0]~dataout ;
wire \Cin~dataout ;
wire \Add0|adder|result_node|cs_buffer[0]~77_combout ;
wire \Add0|adder|result_node|cs_buffer[1]~45_combout ;
wire \Add2|adder|result_node|cs_buffer[1]~combout ;
wire \add_sub~dataout ;
wire \S~20_combout ;
wire \A[1]~dataout ;
wire \B[1]~dataout ;
wire \Add0|adder|result_node|cs_buffer[1]~49_combout ;
wire \Add0|adder|result_node|cs_buffer[2]~53_combout ;
wire \Add2|adder|result_node|cout[1] ;
wire \Add2|adder|result_node|cs_buffer[2]~combout ;
wire \S~21_combout ;
wire \A[2]~dataout ;
wire \B[2]~dataout ;
wire \Add0|adder|result_node|cs_buffer[2]~57_combout ;
wire \Add0|adder|result_node|cs_buffer[3]~61_combout ;
wire \Add2|adder|result_node|cout[2] ;
wire \Add2|adder|result_node|cs_buffer[3]~combout ;
wire \S~22_combout ;
wire \A[3]~dataout ;
wire \B[3]~dataout ;
wire \Add0|adder|result_node|cs_buffer[3]~65_combout ;
wire \Add0|adder|result_node|cs_buffer[4]~69_combout ;
wire \Add2|adder|result_node|cout[3] ;
wire \Add2|adder|result_node|cs_buffer[4]~combout ;
wire \S~23_combout ;
wire \Add0|adder|result_node|cs_buffer[4]~73_combout ;
wire \Add2|adder|result_node|cout[4] ;
wire \S~24_combout ;


// atom is at PIN_124
flex10ke_io \A[0]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\A[0]~dataout ),
	.padio(A[0]));
// synopsys translate_off
defparam \A[0]~I .feedback_mode = "from_pin";
defparam \A[0]~I .operation_mode = "input";
defparam \A[0]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_54
flex10ke_io \B[0]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\B[0]~dataout ),
	.padio(B[0]));
// synopsys translate_off
defparam \B[0]~I .feedback_mode = "from_pin";
defparam \B[0]~I .operation_mode = "input";
defparam \B[0]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_14
flex10ke_io \Cin~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\Cin~dataout ),
	.padio(Cin));
// synopsys translate_off
defparam \Cin~I .feedback_mode = "from_pin";
defparam \Cin~I .operation_mode = "input";
defparam \Cin~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at LC3_C6
flex10ke_lcell \Add0|adder|result_node|cs_buffer[0]~77 (
// Equation(s):
// \Add0|adder|result_node|cs_buffer[0]~77_combout  = \Cin~dataout 

	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\Cin~dataout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0|adder|result_node|cs_buffer[0]~77_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \Add0|adder|result_node|cs_buffer[0]~77 .clock_enable_mode = "false";
defparam \Add0|adder|result_node|cs_buffer[0]~77 .lut_mask = "ff00";
defparam \Add0|adder|result_node|cs_buffer[0]~77 .operation_mode = "normal";
defparam \Add0|adder|result_node|cs_buffer[0]~77 .output_mode = "comb_only";
defparam \Add0|adder|result_node|cs_buffer[0]~77 .packed_mode = "false";
// synopsys translate_on

// atom is at LC1_C6
flex10ke_lcell \Add0|adder|result_node|cs_buffer[1]~45 (
// Equation(s):
// \Add0|adder|result_node|cs_buffer[1]~45_combout  = \A[0]~dataout  $ \B[0]~dataout  $ \Add0|adder|result_node|cs_buffer[0]~77_combout 

	.dataa(vcc),
	.datab(\A[0]~dataout ),
	.datac(\B[0]~dataout ),
	.datad(\Add0|adder|result_node|cs_buffer[0]~77_combout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0|adder|result_node|cs_buffer[1]~45_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \Add0|adder|result_node|cs_buffer[1]~45 .clock_enable_mode = "false";
defparam \Add0|adder|result_node|cs_buffer[1]~45 .lut_mask = "c33c";
defparam \Add0|adder|result_node|cs_buffer[1]~45 .operation_mode = "normal";
defparam \Add0|adder|result_node|cs_buffer[1]~45 .output_mode = "comb_only";
defparam \Add0|adder|result_node|cs_buffer[1]~45 .packed_mode = "false";
// synopsys translate_on

// atom is at LC2_C12
flex10ke_lcell \Add2|adder|result_node|cs_buffer[1] (
// Equation(s):
// \Add2|adder|result_node|cs_buffer[1]~combout  = \A[0]~dataout  $ \B[0]~dataout 
// \Add2|adder|result_node|cout[1]  = CARRY(\A[0]~dataout  # !\B[0]~dataout )

	.dataa(\A[0]~dataout ),
	.datab(\B[0]~dataout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add2|adder|result_node|cs_buffer[1]~combout ),
	.regout(),
	.cout(\Add2|adder|result_node|cout[1] ),
	.cascout());
// synopsys translate_off
defparam \Add2|adder|result_node|cs_buffer[1] .clock_enable_mode = "false";
defparam \Add2|adder|result_node|cs_buffer[1] .lut_mask = "66bb";
defparam \Add2|adder|result_node|cs_buffer[1] .operation_mode = "arithmetic";
defparam \Add2|adder|result_node|cs_buffer[1] .output_mode = "comb_only";
defparam \Add2|adder|result_node|cs_buffer[1] .packed_mode = "false";
// synopsys translate_on

// atom is at PIN_126
flex10ke_io \add_sub~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\add_sub~dataout ),
	.padio(add_sub));
// synopsys translate_off
defparam \add_sub~I .feedback_mode = "from_pin";
defparam \add_sub~I .operation_mode = "input";
defparam \add_sub~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at LC5_C6
flex10ke_lcell \S~20 (
// Equation(s):
// \S~20_combout  = \add_sub~dataout  & \Add0|adder|result_node|cs_buffer[1]~45_combout  # !\add_sub~dataout  & (\Add2|adder|result_node|cs_buffer[1]~combout )

	.dataa(vcc),
	.datab(\Add0|adder|result_node|cs_buffer[1]~45_combout ),
	.datac(\Add2|adder|result_node|cs_buffer[1]~combout ),
	.datad(\add_sub~dataout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\S~20_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \S~20 .clock_enable_mode = "false";
defparam \S~20 .lut_mask = "ccf0";
defparam \S~20 .operation_mode = "normal";
defparam \S~20 .output_mode = "comb_only";
defparam \S~20 .packed_mode = "false";
// synopsys translate_on

// atom is at PIN_56
flex10ke_io \A[1]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\A[1]~dataout ),
	.padio(A[1]));
// synopsys translate_off
defparam \A[1]~I .feedback_mode = "from_pin";
defparam \A[1]~I .operation_mode = "input";
defparam \A[1]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_125
flex10ke_io \B[1]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\B[1]~dataout ),
	.padio(B[1]));
// synopsys translate_off
defparam \B[1]~I .feedback_mode = "from_pin";
defparam \B[1]~I .operation_mode = "input";
defparam \B[1]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at LC2_C6
flex10ke_lcell \Add0|adder|result_node|cs_buffer[1]~49 (
// Equation(s):
// \Add0|adder|result_node|cs_buffer[1]~49_combout  = \A[0]~dataout  & (\B[0]~dataout  # \Add0|adder|result_node|cs_buffer[0]~77_combout ) # !\A[0]~dataout  & \B[0]~dataout  & \Add0|adder|result_node|cs_buffer[0]~77_combout 

	.dataa(vcc),
	.datab(\A[0]~dataout ),
	.datac(\B[0]~dataout ),
	.datad(\Add0|adder|result_node|cs_buffer[0]~77_combout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0|adder|result_node|cs_buffer[1]~49_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \Add0|adder|result_node|cs_buffer[1]~49 .clock_enable_mode = "false";
defparam \Add0|adder|result_node|cs_buffer[1]~49 .lut_mask = "fcc0";
defparam \Add0|adder|result_node|cs_buffer[1]~49 .operation_mode = "normal";
defparam \Add0|adder|result_node|cs_buffer[1]~49 .output_mode = "comb_only";
defparam \Add0|adder|result_node|cs_buffer[1]~49 .packed_mode = "false";
// synopsys translate_on

// atom is at LC3_C9
flex10ke_lcell \Add0|adder|result_node|cs_buffer[2]~53 (
// Equation(s):
// \Add0|adder|result_node|cs_buffer[2]~53_combout  = \A[1]~dataout  $ \B[1]~dataout  $ \Add0|adder|result_node|cs_buffer[1]~49_combout 

	.dataa(vcc),
	.datab(\A[1]~dataout ),
	.datac(\B[1]~dataout ),
	.datad(\Add0|adder|result_node|cs_buffer[1]~49_combout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0|adder|result_node|cs_buffer[2]~53_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \Add0|adder|result_node|cs_buffer[2]~53 .clock_enable_mode = "false";
defparam \Add0|adder|result_node|cs_buffer[2]~53 .lut_mask = "c33c";
defparam \Add0|adder|result_node|cs_buffer[2]~53 .operation_mode = "normal";
defparam \Add0|adder|result_node|cs_buffer[2]~53 .output_mode = "comb_only";
defparam \Add0|adder|result_node|cs_buffer[2]~53 .packed_mode = "false";
// synopsys translate_on

// atom is at LC3_C12
flex10ke_lcell \Add2|adder|result_node|cs_buffer[2] (
// Equation(s):
// \Add2|adder|result_node|cs_buffer[2]~combout  = \A[1]~dataout  $ \B[1]~dataout  $ \Add2|adder|result_node|cout[1] 
// \Add2|adder|result_node|cout[2]  = CARRY(\A[1]~dataout  & (\Add2|adder|result_node|cout[1]  # !\B[1]~dataout ) # !\A[1]~dataout  & !\B[1]~dataout  & \Add2|adder|result_node|cout[1] )

	.dataa(\A[1]~dataout ),
	.datab(\B[1]~dataout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(\Add2|adder|result_node|cout[1] ),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add2|adder|result_node|cs_buffer[2]~combout ),
	.regout(),
	.cout(\Add2|adder|result_node|cout[2] ),
	.cascout());
// synopsys translate_off
defparam \Add2|adder|result_node|cs_buffer[2] .cin_used = "true";
defparam \Add2|adder|result_node|cs_buffer[2] .clock_enable_mode = "false";
defparam \Add2|adder|result_node|cs_buffer[2] .lut_mask = "96b2";
defparam \Add2|adder|result_node|cs_buffer[2] .operation_mode = "arithmetic";
defparam \Add2|adder|result_node|cs_buffer[2] .output_mode = "comb_only";
defparam \Add2|adder|result_node|cs_buffer[2] .packed_mode = "false";
// synopsys translate_on

// atom is at LC1_C9
flex10ke_lcell \S~21 (
// Equation(s):
// \S~21_combout  = \add_sub~dataout  & \Add0|adder|result_node|cs_buffer[2]~53_combout  # !\add_sub~dataout  & (!\Add2|adder|result_node|cs_buffer[2]~combout )

	.dataa(vcc),
	.datab(\Add0|adder|result_node|cs_buffer[2]~53_combout ),
	.datac(\add_sub~dataout ),
	.datad(\Add2|adder|result_node|cs_buffer[2]~combout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\S~21_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \S~21 .clock_enable_mode = "false";
defparam \S~21 .lut_mask = "c0cf";
defparam \S~21 .operation_mode = "normal";
defparam \S~21 .output_mode = "comb_only";
defparam \S~21 .packed_mode = "false";
// synopsys translate_on

// atom is at PIN_55
flex10ke_io \A[2]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\A[2]~dataout ),
	.padio(A[2]));
// synopsys translate_off
defparam \A[2]~I .feedback_mode = "from_pin";
defparam \A[2]~I .operation_mode = "input";
defparam \A[2]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_12
flex10ke_io \B[2]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\B[2]~dataout ),
	.padio(B[2]));
// synopsys translate_off
defparam \B[2]~I .feedback_mode = "from_pin";
defparam \B[2]~I .operation_mode = "input";
defparam \B[2]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at LC4_C9
flex10ke_lcell \Add0|adder|result_node|cs_buffer[2]~57 (
// Equation(s):
// \Add0|adder|result_node|cs_buffer[2]~57_combout  = \A[1]~dataout  & (\B[1]~dataout  # \Add0|adder|result_node|cs_buffer[1]~49_combout ) # !\A[1]~dataout  & \B[1]~dataout  & \Add0|adder|result_node|cs_buffer[1]~49_combout 

	.dataa(vcc),
	.datab(\A[1]~dataout ),
	.datac(\B[1]~dataout ),
	.datad(\Add0|adder|result_node|cs_buffer[1]~49_combout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0|adder|result_node|cs_buffer[2]~57_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \Add0|adder|result_node|cs_buffer[2]~57 .clock_enable_mode = "false";
defparam \Add0|adder|result_node|cs_buffer[2]~57 .lut_mask = "fcc0";
defparam \Add0|adder|result_node|cs_buffer[2]~57 .operation_mode = "normal";
defparam \Add0|adder|result_node|cs_buffer[2]~57 .output_mode = "comb_only";
defparam \Add0|adder|result_node|cs_buffer[2]~57 .packed_mode = "false";
// synopsys translate_on

// atom is at LC5_C9
flex10ke_lcell \Add0|adder|result_node|cs_buffer[3]~61 (
// Equation(s):
// \Add0|adder|result_node|cs_buffer[3]~61_combout  = \A[2]~dataout  $ \B[2]~dataout  $ \Add0|adder|result_node|cs_buffer[2]~57_combout 

	.dataa(vcc),
	.datab(\A[2]~dataout ),
	.datac(\B[2]~dataout ),
	.datad(\Add0|adder|result_node|cs_buffer[2]~57_combout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0|adder|result_node|cs_buffer[3]~61_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \Add0|adder|result_node|cs_buffer[3]~61 .clock_enable_mode = "false";
defparam \Add0|adder|result_node|cs_buffer[3]~61 .lut_mask = "c33c";
defparam \Add0|adder|result_node|cs_buffer[3]~61 .operation_mode = "normal";
defparam \Add0|adder|result_node|cs_buffer[3]~61 .output_mode = "comb_only";
defparam \Add0|adder|result_node|cs_buffer[3]~61 .packed_mode = "false";
// synopsys translate_on

// atom is at LC4_C12
flex10ke_lcell \Add2|adder|result_node|cs_buffer[3] (
// Equation(s):
// \Add2|adder|result_node|cs_buffer[3]~combout  = \A[2]~dataout  $ \B[2]~dataout  $ \Add2|adder|result_node|cout[2] 
// \Add2|adder|result_node|cout[3]  = CARRY(\A[2]~dataout  & (\Add2|adder|result_node|cout[2]  # !\B[2]~dataout ) # !\A[2]~dataout  & !\B[2]~dataout  & \Add2|adder|result_node|cout[2] )

	.dataa(\A[2]~dataout ),
	.datab(\B[2]~dataout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(\Add2|adder|result_node|cout[2] ),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add2|adder|result_node|cs_buffer[3]~combout ),
	.regout(),
	.cout(\Add2|adder|result_node|cout[3] ),
	.cascout());
// synopsys translate_off
defparam \Add2|adder|result_node|cs_buffer[3] .cin_used = "true";
defparam \Add2|adder|result_node|cs_buffer[3] .clock_enable_mode = "false";
defparam \Add2|adder|result_node|cs_buffer[3] .lut_mask = "96b2";
defparam \Add2|adder|result_node|cs_buffer[3] .operation_mode = "arithmetic";
defparam \Add2|adder|result_node|cs_buffer[3] .output_mode = "comb_only";
defparam \Add2|adder|result_node|cs_buffer[3] .packed_mode = "false";
// synopsys translate_on

// atom is at LC8_C9
flex10ke_lcell \S~22 (
// Equation(s):
// \S~22_combout  = \add_sub~dataout  & \Add0|adder|result_node|cs_buffer[3]~61_combout  # !\add_sub~dataout  & (!\Add2|adder|result_node|cs_buffer[3]~combout )

	.dataa(vcc),
	.datab(\Add0|adder|result_node|cs_buffer[3]~61_combout ),
	.datac(\add_sub~dataout ),
	.datad(\Add2|adder|result_node|cs_buffer[3]~combout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\S~22_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \S~22 .clock_enable_mode = "false";
defparam \S~22 .lut_mask = "c0cf";
defparam \S~22 .operation_mode = "normal";
defparam \S~22 .output_mode = "comb_only";
defparam \S~22 .packed_mode = "false";
// synopsys translate_on

// atom is at PIN_11
flex10ke_io \A[3]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\A[3]~dataout ),
	.padio(A[3]));
// synopsys translate_off
defparam \A[3]~I .feedback_mode = "from_pin";
defparam \A[3]~I .operation_mode = "input";
defparam \A[3]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_96
flex10ke_io \B[3]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\B[3]~dataout ),
	.padio(B[3]));
// synopsys translate_off
defparam \B[3]~I .feedback_mode = "from_pin";
defparam \B[3]~I .operation_mode = "input";
defparam \B[3]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at LC2_C9
flex10ke_lcell \Add0|adder|result_node|cs_buffer[3]~65 (
// Equation(s):
// \Add0|adder|result_node|cs_buffer[3]~65_combout  = \A[2]~dataout  & (\B[2]~dataout  # \Add0|adder|result_node|cs_buffer[2]~57_combout ) # !\A[2]~dataout  & \B[2]~dataout  & \Add0|adder|result_node|cs_buffer[2]~57_combout 

	.dataa(vcc),
	.datab(\A[2]~dataout ),
	.datac(\B[2]~dataout ),
	.datad(\Add0|adder|result_node|cs_buffer[2]~57_combout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0|adder|result_node|cs_buffer[3]~65_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \Add0|adder|result_node|cs_buffer[3]~65 .clock_enable_mode = "false";
defparam \Add0|adder|result_node|cs_buffer[3]~65 .lut_mask = "fcc0";
defparam \Add0|adder|result_node|cs_buffer[3]~65 .operation_mode = "normal";
defparam \Add0|adder|result_node|cs_buffer[3]~65 .output_mode = "comb_only";
defparam \Add0|adder|result_node|cs_buffer[3]~65 .packed_mode = "false";
// synopsys translate_on

// atom is at LC1_C12
flex10ke_lcell \Add0|adder|result_node|cs_buffer[4]~69 (
// Equation(s):
// \Add0|adder|result_node|cs_buffer[4]~69_combout  = \A[3]~dataout  $ \B[3]~dataout  $ \Add0|adder|result_node|cs_buffer[3]~65_combout 

	.dataa(vcc),
	.datab(\A[3]~dataout ),
	.datac(\B[3]~dataout ),
	.datad(\Add0|adder|result_node|cs_buffer[3]~65_combout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0|adder|result_node|cs_buffer[4]~69_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \Add0|adder|result_node|cs_buffer[4]~69 .clock_enable_mode = "false";
defparam \Add0|adder|result_node|cs_buffer[4]~69 .lut_mask = "c33c";
defparam \Add0|adder|result_node|cs_buffer[4]~69 .operation_mode = "normal";
defparam \Add0|adder|result_node|cs_buffer[4]~69 .output_mode = "comb_only";
defparam \Add0|adder|result_node|cs_buffer[4]~69 .packed_mode = "false";
// synopsys translate_on

// atom is at LC5_C12
flex10ke_lcell \Add2|adder|result_node|cs_buffer[4] (
// Equation(s):
// \Add2|adder|result_node|cs_buffer[4]~combout  = \A[3]~dataout  $ \B[3]~dataout  $ \Add2|adder|result_node|cout[3] 
// \Add2|adder|result_node|cout[4]  = CARRY(\A[3]~dataout  & (\Add2|adder|result_node|cout[3]  # !\B[3]~dataout ) # !\A[3]~dataout  & !\B[3]~dataout  & \Add2|adder|result_node|cout[3] )

	.dataa(\A[3]~dataout ),
	.datab(\B[3]~dataout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(\Add2|adder|result_node|cout[3] ),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add2|adder|result_node|cs_buffer[4]~combout ),
	.regout(),
	.cout(\Add2|adder|result_node|cout[4] ),
	.cascout());
// synopsys translate_off
defparam \Add2|adder|result_node|cs_buffer[4] .cin_used = "true";
defparam \Add2|adder|result_node|cs_buffer[4] .clock_enable_mode = "false";
defparam \Add2|adder|result_node|cs_buffer[4] .lut_mask = "96b2";
defparam \Add2|adder|result_node|cs_buffer[4] .operation_mode = "arithmetic";
defparam \Add2|adder|result_node|cs_buffer[4] .output_mode = "comb_only";
defparam \Add2|adder|result_node|cs_buffer[4] .packed_mode = "false";
// synopsys translate_on

// atom is at LC7_C12
flex10ke_lcell \S~23 (
// Equation(s):
// \S~23_combout  = \add_sub~dataout  & \Add0|adder|result_node|cs_buffer[4]~69_combout  # !\add_sub~dataout  & (!\Add2|adder|result_node|cs_buffer[4]~combout )

	.dataa(vcc),
	.datab(\Add0|adder|result_node|cs_buffer[4]~69_combout ),
	.datac(\add_sub~dataout ),
	.datad(\Add2|adder|result_node|cs_buffer[4]~combout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\S~23_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \S~23 .clock_enable_mode = "false";
defparam \S~23 .lut_mask = "c0cf";
defparam \S~23 .operation_mode = "normal";
defparam \S~23 .output_mode = "comb_only";
defparam \S~23 .packed_mode = "false";
// synopsys translate_on

// atom is at LC8_C12
flex10ke_lcell \Add0|adder|result_node|cs_buffer[4]~73 (
// Equation(s):
// \Add0|adder|result_node|cs_buffer[4]~73_combout  = \A[3]~dataout  & (\B[3]~dataout  # \Add0|adder|result_node|cs_buffer[3]~65_combout ) # !\A[3]~dataout  & \B[3]~dataout  & \Add0|adder|result_node|cs_buffer[3]~65_combout 

	.dataa(vcc),
	.datab(\A[3]~dataout ),
	.datac(\B[3]~dataout ),
	.datad(\Add0|adder|result_node|cs_buffer[3]~65_combout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0|adder|result_node|cs_buffer[4]~73_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \Add0|adder|result_node|cs_buffer[4]~73 .clock_enable_mode = "false";
defparam \Add0|adder|result_node|cs_buffer[4]~73 .lut_mask = "fcc0";
defparam \Add0|adder|result_node|cs_buffer[4]~73 .operation_mode = "normal";
defparam \Add0|adder|result_node|cs_buffer[4]~73 .output_mode = "comb_only";
defparam \Add0|adder|result_node|cs_buffer[4]~73 .packed_mode = "false";
// synopsys translate_on

// atom is at LC6_C12
flex10ke_lcell \S~24 (
// Equation(s):
// \S~24_combout  = \add_sub~dataout  & \Add0|adder|result_node|cs_buffer[4]~73_combout  # !\add_sub~dataout  & (!\Add2|adder|result_node|cout[4] )

	.dataa(vcc),
	.datab(\Add0|adder|result_node|cs_buffer[4]~73_combout ),
	.datac(vcc),
	.datad(\add_sub~dataout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(\Add2|adder|result_node|cout[4] ),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\S~24_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \S~24 .cin_used = "true";
defparam \S~24 .clock_enable_mode = "false";
defparam \S~24 .lut_mask = "cc0f";
defparam \S~24 .operation_mode = "normal";
defparam \S~24 .output_mode = "comb_only";
defparam \S~24 .packed_mode = "false";
// synopsys translate_on

// atom is at PIN_17
flex10ke_io \S[0]~I (
	.datain(\S~20_combout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(S[0]));
// synopsys translate_off
defparam \S[0]~I .feedback_mode = "none";
defparam \S[0]~I .operation_mode = "output";
defparam \S[0]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_97
flex10ke_io \S[1]~I (
	.datain(\S~21_combout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(S[1]));
// synopsys translate_off
defparam \S[1]~I .feedback_mode = "none";
defparam \S[1]~I .operation_mode = "output";
defparam \S[1]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_95
flex10ke_io \S[2]~I (
	.datain(\S~22_combout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(S[2]));
// synopsys translate_off
defparam \S[2]~I .feedback_mode = "none";
defparam \S[2]~I .operation_mode = "output";
defparam \S[2]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_18
flex10ke_io \S[3]~I (
	.datain(\S~23_combout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(S[3]));
// synopsys translate_off
defparam \S[3]~I .feedback_mode = "none";
defparam \S[3]~I .operation_mode = "output";
defparam \S[3]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_63
flex10ke_io \S[4]~I (
	.datain(\S~24_combout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(S[4]));
// synopsys translate_off
defparam \S[4]~I .feedback_mode = "none";
defparam \S[4]~I .operation_mode = "output";
defparam \S[4]~I .reg_source_mode = "none";
// synopsys translate_on

endmodule
